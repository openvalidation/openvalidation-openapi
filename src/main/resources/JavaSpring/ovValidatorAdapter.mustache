package {{basePackage}}.validation;

import org.springframework.stereotype.Component;
import org.springframework.validation.Errors;
import org.springframework.validation.Validator;
import org.springframework.web.context.request.RequestAttributes;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import javax.servlet.http.HttpServletRequest;

@Component
public class OVSpringValdator implements Validator {

    @Override
    public boolean supports(Class<?> aClass) { return true; }

    @Override
    public void validate(Object target, Errors errors) {
        OpenValidatorFactory validatorFactory = new OpenValidatorFactory();

        OVFramework.IOpenValidator validator = validatorFactory.create(getCurrentOperationID());

        if (validator != null){
            OVFramework.OpenValidationSummary result = validator.validate(target);
            if (result.hasErrors()){
                for(OVFramework.OpenValidationSummaryError error :result.getErrors()){

                    if (error.getFields() != null && error.getFields().length > 0) {
                        for(String field : error.getFields()){
                            if(errors.hasFieldErrors(field)){
                                errors.rejectValue(field, null, error.getError());
                            }
                            else
                            {
                                errors.reject(null, field +" : " + error.getError());
                            }
                        }
                    }
                    else
                    {
                        errors.reject(error.getError());
                    }

                }
            }
        }
    }

    public String getCurrentOperationID(){
        HttpServletRequest request = getCurrentRequest();

        return  (request.getServletPath() + "/" + request.getMethod()).toLowerCase();
    }

    public static HttpServletRequest getCurrentRequest() {
        RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();
        HttpServletRequest servletRequest = ((ServletRequestAttributes) requestAttributes).getRequest();

        return servletRequest;
    }
}